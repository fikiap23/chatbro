@startuml

class User {
    - name: string
    - phone_number: string
    - profile_picture: string
    - auth_status: boolean
    + get_name(): string
    + set_name(name: string): void
    + get_phone_number(): string
    + set_phone_number(phone_number: string): void
    + get_profile_picture(): string
    + set_profile_picture(profile_picture: string): void
    + is_auth(): boolean
    + set_auth(auth_status: boolean): void
    + authenticate(phone_number: string, otp: string): boolean
    + generate_otp(): string
}

class Contact {
    - name: string
    - phone_number: string
    - profile_picture: string
    + get_name(): string
    + set_name(name: string): void
    + get_phone_number(): string
    + set_phone_number(phone_number: string): void
    + get_profile_picture(): string
    + set_profile_picture(profile_picture: string): void
}

class Group {
    - name: string
    - participants: list<Contact>
    + get_name(): string
    + set_name(name: string): void
    + add_participant(participant: Contact): void
    + remove_participant(participant: Contact): void
    + get_participants(): list<Contact>
}

class Message {
    - sender: User
    - receiver: Contact
    - content: string
    - timestamp: datetime
    + get_sender(): User
    + set_sender(sender: User): void
    + get_receiver(): Contact
    + set_receiver(receiver: Contact): void
    + get_content(): string
    + set_content(content: string): void
    + get_timestamp(): datetime
    + set_timestamp(timestamp: datetime): void
}

class Call {
    - caller: User
    - receiver: Contact
    - type: string
    - timestamp: datetime
    + get_caller(): User
    + set_caller(caller: User): void
    + get_receiver(): Contact
    + set_receiver(receiver: Contact): void
    + get_type(): string
    + set_type(type: string): void
    + get_timestamp(): datetime
    + set_timestamp(timestamp: datetime): void
}

class Notification {
    - title: string
    - message: string
    - timestamp: datetime
    + get_title(): string
    + set_title(title: string): void
    + get_message(): string
    + set_message(message: string): void
    + get_timestamp(): datetime
    + set_timestamp(timestamp: datetime): void
}

class Status {
    - creator: User
    - content: string
    - timestamp: datetime
    + get_creator(): User
    + set_creator(creator: User): void
    + get_content(): string
    + set_content(content: string): void
    + get_timestamp(): datetime
    + set_timestamp(timestamp: datetime): void
}

class Chat {
    -id: int
    -sender_id: int
    -receiver_id: int
    -message: string
    -timestamp: datetime
    +get_id(): int
    +get_sender_id(): int
    +get_receiver_id(): int
    +get_message(): string
    +get_timestamp(): datetime
}

User "1" -- "many" Contact
User "1" -- "many" Group
Contact "1" -- "many" Group
User "1" -- "many" Message
Contact "1" -- "many" Message
User "1" -- "many" Call
Contact "1" -- "many" Call
User "1" -- "many" Notification
Contact "1" -- "many" Notification
User "1" -- "many" Status
User "1" o-- "many" Chat

User --> AuthController

class AuthController {
    + request_otp
    + authenticate(phone_number: string, otp: string): boolean
}

AuthController --> SMSProvider

class SMSProvider {
    + send_otp(phone_number: string, otp: string): boolean
}

@enduml
